pyarianne
---------

It is the API to connect your game into the Arianne system.
It is composed of several functions that provides you a basic low level access to the Arianne framework.

It is important to respect the order of the functions, if not behaviour is not described.

Let's see first the functions calls and we later describe the data structures:
'''setIdleMethod(function)'''
This function will set the callback function that will be called each time the module needs to block for a given period of time.

'''connectToArianne(serverName, port)'''
This function is called to connect to an Arianne server running on the server whose name (DNS) or IP is <serverName> and that can be reached at port <port>.
This function will never fail.
It returns nothing

'''login(username, password)'''
This function should be called AFTER connecting to the Arianne server, so that it tries to login into the server using the give username and password combination.
It will return true if the login is completed correctly or false and will set error to true.
This function blocks up to 4 seconds before failing.

'''availableCharacters()'''
Once you have logged into Arianne, you can get the list of characters available for your account. 
It will return a list of name of characters.

'''serverInfo()'''
Once you have logged into Arianne, you can get the list of server propierties that may be relevant to the client. 
It will return a list of propierties of the form attribute=value.

'''chooseCharacter(character)'''
Once have recieved the list of characters you can choose one of them to enter into the game.
If it enters correctly it will return true, otherwise it will return false.
This function block for up to 4 seconds before it fails.

'''hasRPMap()'''
This function returns true if there is a Map available for this game.

'''getRPMap()'''
This functions returns a array of bytes that contains the serialized data of the Map.
It is up to your client to process it and build a adecuate representation.

'''hasPerception()'''
This function returns true if there is a perception available for your game.

'''getPerception()'''
This function returns a perception that should have been previously stored by a call to hasPerception, using a polling technique. This function won't block the client.

'''send(action)'''
'''sendBlocking(action)'''
These both functions send a Action the server, but the blocking function will block until server replies with a Action ACK message, that is around the trip time of the message.
They return nothing.

'''logout()'''
Exits the Arianne enviroment and returns true.
If it returns false it means the logout didn't happened.
This function block for up to 4 seconds before it fails.

'''iserror()'''
Return true if there is a significative error

'''errorReason()'''
Returns a string containing a explanation of the error


There are also several structures very important in the game that you MUST use.
* RPAction
* RPObject
* RPSlot
* Perception
* World
* PerceptionHandler
